// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Payments.Data;

#nullable disable

namespace Payments.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240602194330_test26")]
    partial class test26
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("Payments.Data.Branchs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameBranch")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberBranch")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Payments.Data.PayConditionInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NamePayCond")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberPayCond")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PayConditionInputs");
                });

            modelBuilder.Entity("Payments.Data.PaymentCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberBranch")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PayCondition")
                        .HasColumnType("TEXT");

                    b.Property<double>("Share")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("PaymentConditions");
                });

            modelBuilder.Entity("Payments.Data.PlanRevenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Month")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberBranch")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Revenue")
                        .HasColumnType("REAL");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PlanRevenues");
                });

            modelBuilder.Entity("Payments.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Payments.Models.CalculatedRevenueViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Month")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberBranch")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("TEXT");

                    b.Property<double>("RevenueRes")
                        .HasColumnType("REAL");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("calculatedRevenueViewModels");
                });

            modelBuilder.Entity("Payments.Models.Coeff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayPay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kod")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PayCondition")
                        .HasColumnType("TEXT");

                    b.Property<double>("SumPayment")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("coeffs");
                });

            modelBuilder.Entity("Payments.Models.DataInvoicesPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatePayment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateScore")
                        .HasColumnType("TEXT");

                    b.Property<double>("DayPay")
                        .HasColumnType("REAL");

                    b.Property<int>("IdClient")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdPayment")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdScore")
                        .HasColumnType("TEXT");

                    b.Property<int>("InitialDatesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kod")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Sum")
                        .HasColumnType("REAL");

                    b.Property<double>("SumPayment")
                        .HasColumnType("REAL");

                    b.Property<double>("SumScore")
                        .HasColumnType("REAL");

                    b.Property<string>("ViewPayment")
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewScore")
                        .HasColumnType("TEXT");

                    b.Property<string>("payCondition")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DataInvoicesPays");
                });

            modelBuilder.Entity("Payments.Models.FinalForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("FinalAmount")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberBranch")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FinalForecasts");
                });

            modelBuilder.Entity("Payments.Models.ForecastData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConditionPay")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDoc")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdKod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KodClient")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberDoc")
                        .HasColumnType("TEXT");

                    b.Property<double>("Sum")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Forecasts");
                });

            modelBuilder.Entity("Payments.Models.ForecastViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateDoc")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdKod")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Sum")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("forecastViewModels");
                });

            modelBuilder.Entity("Payments.Models.InitialData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConditionPay")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDoc")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdKod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KodClient")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberDoc")
                        .HasColumnType("TEXT");

                    b.Property<double>("Sum")
                        .HasColumnType("REAL");

                    b.Property<string>("ViewDoc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("InitialDates");
                });

            modelBuilder.Entity("Payments.Models.Paying", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberBranch")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("TEXT");

                    b.Property<double>("Sum")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Payings");
                });

            modelBuilder.Entity("Payments.Models.PaymentForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameBranch")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberBranch")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("paymentForecasts");
                });

            modelBuilder.Entity("Payments.Models.Proceeds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Month")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberBranch")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("proceeds");
                });

            modelBuilder.Entity("Payments.Models.UnpaidInv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConditionPay")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDoc")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdKod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KodClient")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberDoc")
                        .HasColumnType("TEXT");

                    b.Property<double>("Sum")
                        .HasColumnType("REAL");

                    b.Property<string>("ViewDocInv")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Unpaids");
                });
#pragma warning restore 612, 618
        }
    }
}
